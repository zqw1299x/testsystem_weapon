/**
*   COPYRIGHT (C) TASSON     CO.,LTD
*----------------------------------------------------------------------------
* @file drvFC1553.h
*
* @brief 
* Details
*----------------------------------------------------------------------------
* Change History :
* <Date>           | <Author> 	| <Description>
* @date 2022/03/24  |  xxxx  |  Create File
* 
*
*/
#ifndef DRVFC1553_H
#define DRVFC1553_H


#ifdef __cplusplus
extern "C" {
#endif

/* 驱动版本：1.0.00 */
  
/***************************** Include Files *********************************/

/************************** Constant Definitions *****************************/

/**************************** Type Definitions *******************************/

/************************************** DRV ERRNO DEFINE **********************************************/  
#define 	DRV_OPERATE_SUCCESS							(0)		//操作成功
#define 	DRV_ERRNO_PARAM_INVALID						(-1)	// 函数参数检查非法
#define 	DRV_ERRNO_FPGA_FAILED						(-2)	// 固件状态异常
#define 	DRV_ERRNO_LOGIN_FAILED						(-3)	// 获取登录ID失败
#define 	DRV_ERRNO_FC_RUNNING						(-4)	// NT已启动，设备启动失败
#define 	DRV_ERRNO_FC_START_FAILED					(-5)	// 设备启动失败
#define 	DRV_ERRNO_FC_STOPPED						(-6)	// NT已停止，设备停止失败
#define 	DRV_ERRNO_FC_STOP_FAILED					(-7)	// 设备停止失败
#define     DRV_ERRNO_NT_SUBADDR_INVALID				(-8)	// NT子地址配置非法
#define     DRV_ERRNO_MSG_LEN_INVALID					(-9)	// 消息数据长度非法

#define 	DRV_ERRNO_FC_DMA_TX_FAILD					(-10)	// 消息类型为发送时，发送数据失败，DMA写数据失败
#define 	DRV_ERRNO_FC_GET_CQ_FAILD					(-11)	// 获取消息状态失败，读取固件CQ个数信息寄存器值为0
#define 	DRV_ERRNO_FC_CQ_STATUS_ERR					(-12)	// CQ中通信状态信息异常
#define 	DRV_ERRNO_FC_DMA_RX_FAILD					(-13)	// 消息类型为接收时，接收数据失败，DMA读数据失败

#define		DRV_ERRNO_LINK_STATUS_ERR					(-26)	// 通信链路异常


/************************************************************************\
* @name	     : ST_drvFcDevNtConfig
* @purpose   : NT设备配置信息结构体
* @date	     : 2021/01/20
\************************************************************************/
struct ST_drvFcDevNtConfig
{
	unsigned short m_csTOV;					/* NC_C/S_TOV（cs状态响应超时时间），单位10ns，取值范围：0x1388~0xFFFF。
											其它：默认为0x2580，即96us。提示：协议上没有上限要求，只定义典型值。*/
	unsigned short m_csdRxTOV;				/* C-S/D_RX_TOV（csd数据序列超时时间），单位10ns，取值范围：0x1388~0xFFFF。
											其它：默认为0x1388，即50us。提示：协议上没有上限要求，只定义典型值。*/
	unsigned short m_linkSpeed;				/* 链路速率选择：1：1.0625Gbps；2：2.125Gbps：3：4.25Gbps。其它：默认为1.0625Gbps。*/
	unsigned short m_backupMode;			/* 备份模式：1：冷备份；2：热备份。其它：默认为冷备份。*/
	unsigned int m_ntSubAddrPlot1;			/* NT子地址设置策略1。bit31~0对应NT子地址32~1的设置使能。bit位置0：不使能；bit位置1：使能。*/
	unsigned int m_ntSubAddrPlot2;			/* NT子地址设置策略2。bit31~0对应NT子地址64~33的设置使能。bit位置0：不使能；bit位置1：使能。*/
	unsigned int m_ntSubAddrPlot3;			/* NT子地址设置策略3。bit31~0对应NT子地址96~65的设置使能。bit位置0：不使能；bit位置1：使能。*/
	unsigned int m_ntSubAddrPlot4;			/* NT子地址设置策略4。bit31~0对应NT子地址128~97的设置使能。bit位置0：不使能；bit位置1：使能。*/
};


/************************************************************************\
* @name	     : ST_drvFcNtMsgCfg
* @purpose   : NT消息配置结构体
* @date	     : 2021/01/07
\************************************************************************/
struct ST_drvFcNtMsgCfg
{
	unsigned short m_ntSubAddr;				/*
											NT子地址
											取值范围：0～128
											0表示模式命令
											1~128表示子地址，其中发送子地址1～128，接收子地址1～128
											其它：无效
											*/
	unsigned short m_modeCode;				/* 模式命令码，子地址为0时有效。 */
};


/************************************************************************\
* @name	     : ST_drvFcNtMsgStatus
* @purpose   : NT消息运行状态结构体
* @date	     : 2021/01/20
\************************************************************************/
struct ST_drvFcNtMsgStatus
{
  	unsigned short m_commLink;	    		/*
											通信链路:1：A路；2：B路；
											其它：0和大于2的值时无意义。
											*/
	unsigned short m_tr;         			/*
											消息收发方向
											0：NT接收
											1：NT发送
											*/
	unsigned short m_ntSubAddr;				/*
											NT消息子地址
											取值范围：0～128
											0表示模式命令
											1~128表示子地址，发送子地址1～128，接收子地址1～128
											*/
	unsigned short m_modeCode;				/* 模式命令码，当子地址为0时有效。 */
	unsigned int m_dataLen;    				/*
											消息长度，单位字节，取值范围：1~65536。
											其它：0和大于65536的值时无意义。
											*/
	unsigned int m_commStatus;				/* NT通信状态  */
  	unsigned int m_statusFrame;				/* 消息运行状态帧  */

};


/************************** Variable Declaration *****************************/

/************************** Function Prototypes ******************************/
	
/************************************************************************\
* @名称		: 	drvFcInit
* @返回值		: 	初始化成功时返回登录ID，失败时返回故障码。
* 				返回值 ：1~16776192：节点登录ID ；
* 					  -2：固件状态异常
* 					  -3：获取登录ID失败
* @说明		: 	FC设备初始化，主要完成登录ID获取。在板卡上电后，确定板卡正常的情况下固件会进行显式登陆操作，软件获取登录ID并返回。
* @日期		: 	2021/04/16
\************************************************************************/
int drvFcInit();


/************************************************************************\
* @名称			: 	drvFcStart
* @param[输入]	: 	pfcDevConfig：FC设备配置信息结构体指针。
* @返回值			: 	成功返回0，失败时返回故障码。
* 					返回值 ：0：设备启动成功；
* 							-1：函数参数检查非法；
* 							-4：NT已启动，设备启动失败
* 							-5：设备启动失败
* @说明			: 	启动设备，主要完成设备角色属性配置并开始运行设备。
* @日期			: 	2021/04/16
\************************************************************************/
int drvFcStart(unsigned char *pfcDevConfig);


/************************************************************************\
* @名称			: 	drvFcStop
* @返回值			: 	设备停止成功返回0，失败时返回故障码。
* 					返回值：	 0：设备停止成功；
* 							-6：NT已停止，设备停止失败
* @说明			: 	停止设备工作。
* @日期			: 	2021/04/16
\************************************************************************/
int drvFcStop();


/************************************************************************\
* @名称			: 	drvFcGetLinkStatus
* @param[输出]	: 	linkStatus：查询结果。
* 								bit0：A路链路状态，0表示正常，1表示异常。
* @返回值			: 	查询成功返回0，失败时返回故障码。
*					返回值 ：	 0：状态查询成功；
* 							-1：函数参数检查非法；
* @说明			: 	查询当前FC通信链路状态。
* @日期			: 	2021/04/16
\************************************************************************/
int drvFcGetLinkStatus(unsigned short *linkStatus);


/************************************************************************\
* @名称			: 	drvFcSend
* @param[输入]	: 	pfcMsgCfg：消息配置信息。
* @param[输入]	: 	pdataBuf：发送数据缓冲区指针。
* @param[输入]	: 	dataBufLen：发送数据缓冲区大小，单位：字节。
* @返回值			: 	发送时成功返回实际发送数据长度，失败时返回故障码。
* 					返回值 ：1~65536：消息类型为发送时，表示实际发送数据长度。
* 						  	 0：消息类型为接收时，表示消息配置成功。
* 						  	-1：函数参数检查非法；
* 						  	-8：NT子地址配置非法；
* 							-10：发送数据失败，DMA写数据失败
* @说明			: 	NT发送消息数据。
* @日期			: 	2021/04/16
\************************************************************************/
int drvFcSend(unsigned char *pfcMsgCfg, unsigned char *pdataBuf, unsigned int dataBufLen);


/************************************************************************\
* @名称			: 	drvFcSendCheck
* @param[输出]	: 	pntMsgStatus：NT消息状态结构体指针。
* @返回值			: 	查询成功返回0，失败时返回故障码。
* 					返回值 ：0：查询发送消息状态成功；
* 						  	 -1：函数参数检查非法；
* 						  	-11：获取消息状态失败，读取固件CQ个数信息寄存器值为0
* 							-12：CQ中通信状态信息异常
* @说明			: 	NT查询发送消息状态。
* @日期			: 	2021/03/16 
\************************************************************************/
int drvFcSendCheck(struct ST_drvFcNtMsgStatus *pntMsgStatus);


/************************************************************************\
* @名称			: 	drvFcRecv
* @param[输出]	: 	pdataBuf：接收缓冲区指针
* @param[输入]	: 	dataBufLen：接收数据缓冲区长度，单位：字节。
* @param[输出]	: 	pfcNtMsgStatus：消息状态结构体指针。
* @返回值			: 	接收成功返回实际接收数据长度；
* 					返回值 ： 大于0表示实际接收数据长度
* 						  	-1：函数参数检查非法；
* 						  	-11：获取消息状态失败，读取固件CQ个数信息寄存器值为0
* 							-12：CQ中通信状态信息异常
* 							-13：消息类型为接收时，接收数据失败，DMA读数据失败
* @说明			: 	NT接收消息数据和状态。
* @日期			: 	2021/04/16
\************************************************************************/
int drvFcRecv(unsigned char *pdataBuf, unsigned int dataBufLen, unsigned char *pfcMsgStatus);

/************************************************************************\
* @名称			: 	drvFcNtSetServiceReq
* @param[输入]	: 	serviceReq：NT服务请求位置位标志，1：关闭服务请求位；2：开启服务请求位
* @返回值			: 	配置成功返回0，失败返回故障码。
*						 -1：函数参数检查非法；
* @说明			: 	配置NT服务请求位标志。
* @日期			: 	2021/05/27
\************************************************************************/
int drvFcNtSetServiceReq(unsigned short serviceReq);

/************************************************************************\
* @名称			: 	drvFcGetVersion
* @param[输出]	: 	pdrvVerInfo：驱动软件版本信息指针, 大版本(bit[15:12])；中间版本(bit[11:8])；小版本(bit[7:0])；版本由H.M.L=1.0.00开始。
* @返回值			: 	查询驱动版本号成功返回0，失败返回故障码。
* 					返回值 ： 0：查询驱动软件版本号成功；
* 						  	-1：函数参数检查非法；
* @说明			: 	查询所有软件版本号。
* @日期			: 	2022/03/24
\************************************************************************/
int drvFcGetVersion(unsigned int *pdrvVerInfo);


#ifdef __cplusplus
}
#endif


#endif

